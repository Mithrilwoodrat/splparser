
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser.parser

>>> splparser.parse("lookup sourcenames source").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('WORD': 'sourcenames')
            ('WORD': 'source')

>>> splparser.parse("lookup status_desc status OUTPUT description").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('ID': 'status_desc')
            ('WORD': 'status')
            ('OUTPUT')
                ('WORD': 'description')

>>> splparser.parse("lookup local=true geoip clientip").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('LOCAL')
                ('WORD': 'true')
            ('WORD': 'geoip')
            ('WORD': 'clientip')

>>> splparser.parse("lookup usertogroup user as local_user OUTPUT group as user_group").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('WORD': 'usertogroup')
            ('WORD': 'user')
                ('AS')
                    ('ID': 'local_user')
            ('OUTPUT')
                ('WORD': 'group')
                    ('AS')
                        ('ID': 'user_group')

>>> splparser.parse("lookup update=true usertogroup user as local_user OUTPUT group as user_group").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('UPDATE')
                ('WORD': 'true')
            ('WORD': 'usertogroup')
            ('WORD': 'user')
                ('AS')
                    ('ID': 'local_user')
            ('OUTPUT')
                ('WORD': 'group')
                    ('AS')
                        ('ID': 'user_group')

>>> splparser.parse("lookup swit 1 AS Snum OUTPUT Smod").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('WORD': 'swit')
            ('INT': '1')
                ('AS')
                    ('WORD': 'Snum')
            ('OUTPUT')
                ('WORD': 'Smod')

>>> splparser.parse("lookup log.csv profile was_host OUTPUT cell node serverName").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('HOSTNAME': 'log.csv')
            ('WORD': 'profile')
            ('ID': 'was_host')
            ('OUTPUT')
                ('WORD': 'cell')
                ('WORD': 'node')
                ('WORD': 'serverName')

>>> splparser.parse("lookup Service_Account_Lookup sAMAccountName as Account_Name OUTPUT sAMAccountName AS User_Account, AdminAccount").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('ID': 'Service_Account_Lookup')
            ('WORD': 'sAMAccountName')
                ('AS')
                    ('ID': 'Account_Name')
            ('OUTPUT')
                ('WORD': 'sAMAccountName')
                    ('AS')
                        ('ID': 'User_Account')
                        ('WORD': 'AdminAccount')

>>> splparser.parse("lookup SecurityEventCode EventCode,LogName OUTPUTNEW desc").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('WORD': 'SecurityEventCode')
            ('WORD': 'EventCode')
            ('WORD': 'LogName')
            ('OUTPUTNEW')
                ('WORD': 'desc')

>>> splparser.parse("lookup ip AS dst OUTPUT ip,hostname, loc1, loc2,loc3,sig").print_tree()
('ROOT')
    ('STAGE')
        ('LOOKUP')
            ('WORD': 'ip')
                ('AS')
                    ('WORD': 'dst')
            ('OUTPUT')
                ('WORD': 'ip')
                ('WORD': 'hostname')
                ('ID': 'loc1')
                ('ID': 'loc2')
                ('ID': 'loc3')
                ('WORD': 'sig')

