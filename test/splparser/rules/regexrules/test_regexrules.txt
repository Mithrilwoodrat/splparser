Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser

>>> splparser.parse('regex _raw="(?=!\d)10.\d{1,3}\.\d{1,3}\.\d{1,3}(?!\d)"').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'regex')
            ('INTERNAL_FIELD': '_raw')
            ('VALUE': '"(?=!\d)10.\d{1,3}\.\d{1,3}\.\d{1,3}(?!\d)"')
            ('MATCH')

>>> splparser.parse('regex _raw="complicated|regex(?=expression)"').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'regex')
            ('INTERNAL_FIELD': '_raw')
            ('VALUE': '"complicated|regex(?=expression)"')
            ('MATCH')

>>> splparser.parse('regex "Site Category"="Online Storage"').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'regex')
            ('FIELD': '"Site Category"')
            ('VALUE': '"Online Storage"')
            ('MATCH')

>>> splparser.parse('regex exception!="^\["').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'regex')
            ('FIELD': 'exception')
            ('VALUE': '"^\["')
            ('NOT_MATCH')

>>> splparser.parse('regex _raw !="the object is in use by another process"').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'regex')
            ('INTERNAL_FIELD': '_raw')
            ('VALUE': '"the object is in use by another process"')
            ('NOT_MATCH')




