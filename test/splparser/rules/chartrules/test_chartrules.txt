
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser.parser

>>> splparser.parse("chart sum(A) by A span=log2").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('SUM')
                ('WORD': 'A')
                ('BY')
                    ('WORD': 'A')
            ('EQ')
                ('SPAN')
                ('ID': 'log2')

>>> splparser.parse('chart count(eval(method="GET")) AS GET, count(eval(method="POST")) AS POST by host').print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'method')
                        ('WORD': '"GET"')
                ('AS')
                    ('WORD': 'GET')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'method')
                        ('WORD': '"POST"')
                ('AS')
                    ('WORD': 'POST')
                ('BY')
                    ('WORD': 'host')

>>> splparser.parse("chart count by duration span=log2").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('BY')
                    ('WORD': 'duration')
            ('EQ')
                ('SPAN')
                ('ID': 'log2')

>>> splparser.parse("chart avg(eventcount) by duration span=log2").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('AVG')
                ('WORD': 'eventcount')
                ('BY')
                    ('WORD': 'duration')
            ('EQ')
                ('SPAN')
                ('ID': 'log2')

>>> splparser.parse("chart dc(clientip) over date_hour by category_id usenull=f").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('DC')
                ('WORD': 'clientip')
                ('OVER')
                    ('ID': 'date_hour')
                ('BY')
                    ('ID': 'category_id')
            ('EQ')
                ('USENULL')
                ('WORD': 'f')

>>> splparser.parse("chart count over Magnitude by Region useother=f").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('OVER')
                    ('WORD': 'Magnitude')
                ('BY')
                    ('WORD': 'Region')
            ('EQ')
                ('USEOTHER')
                ('WORD': 'f')

>>> splparser.parse("chart max(delay) over foo").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('MAX')
                ('WORD': 'delay')
                ('OVER')
                    ('WORD': 'foo')

>>> splparser.parse("chart eval(avg(size)/max(delay)) AS ratio by host user").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('EVAL')
                ('DIVIDES')
                    ('AVG')
                        ('WORD': 'size')
                    ('MAX')
                        ('WORD': 'delay')
                ('AS')
                    ('WORD': 'ratio')
                ('BY')
                    ('WORD': 'host')
                    ('WORD': 'user')

>>> splparser.parse("chart max(delay) by size bins=10").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('MAX')
                ('WORD': 'delay')
                ('BY')
                    ('WORD': 'size')
            ('EQ')
                ('BINS')
                ('INT': '10')

>>> splparser.parse('chart count(eval(OnAccessRead="false")) as OnAccessRead count(eval(OnAccessWrite="false")) as OnAccessWrite count(eval(OnAccessRename="false")) as OnAccessRename count(eval(OnAccessCleanup="false")) as OnAccessCleanup count(eval(OnAccessSuspect="false")) as OnAccessSuspect count(eval(HIPSSuspect="false")) as HIPSSuspect count(eval(HIPSBlock="true")) as HIPSBlock count(eval(BOEPEnabled="false")) as BOEPEnabled by ConsoleName').print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'OnAccessRead')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'OnAccessRead')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'OnAccessWrite')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'OnAccessWrite')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'OnAccessRename')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'OnAccessRename')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'OnAccessCleanup')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'OnAccessCleanup')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'OnAccessSuspect')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'OnAccessSuspect')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'HIPSSuspect')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'HIPSSuspect')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'HIPSBlock')
                        ('WORD': '"true"')
                ('AS')
                    ('WORD': 'HIPSBlock')
            ('COUNT')
                ('EVAL')
                    ('EQ')
                        ('WORD': 'BOEPEnabled')
                        ('WORD': '"false"')
                ('AS')
                    ('WORD': 'BOEPEnabled')
                ('BY')
                    ('WORD': 'ConsoleName')

TODO: Should this last by apply to the whole list?

>>> splparser.parse("chart count() by host").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('BY')
                    ('WORD': 'host')

>>> splparser.parse('chart limit=8 dc(id) AS "Tempfails" BY  rcptdom').print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('EQ')
                ('LIMIT')
                ('INT': '8')
            ('DC')
                ('WORD': 'id')
                ('AS')
                    ('WORD': '"Tempfails"')
                ('BY')
                    ('WORD': 'rcptdom')

>>> splparser.parse("chart sum(cpuTime) sum(runTime) sum(cacheTime) sum(networkWriteTime) stdev(cpuTime) stdev(runTime) stdev(cacheTime) stdev(networkWriteTime) count over methodName").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('SUM')
                ('WORD': 'cpuTime')
            ('SUM')
                ('WORD': 'runTime')
            ('SUM')
                ('WORD': 'cacheTime')
            ('SUM')
                ('WORD': 'networkWriteTime')
            ('STDEV')
                ('WORD': 'cpuTime')
            ('STDEV')
                ('WORD': 'runTime')
            ('STDEV')
                ('WORD': 'cacheTime')
            ('STDEV')
                ('WORD': 'networkWriteTime')
            ('COUNT')
                ('OVER')
                    ('WORD': 'methodName')

This was in the logs but I can't verify that it's allowable: splparser.parse('chart "Total Upload MB" over SSL by DOMAIN').print_tree()

>>> splparser.parse('chart sparkline sum("Client2ServerBytes") as "MB" by DOMAIN').print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('SPARKLINE')
                ('SUM')
                    ('NBSTR': '"Client2ServerBytes"')
                ('AS')
                    ('WORD': '"MB"')
                ('BY')
                    ('WORD': 'DOMAIN')

I don't think this should be allowed either: splparser.parse("chart span=1d top 20 logRecordType").print_tree()

>>> splparser.parse("chart count (SHORT_EVT_NAME) over LENDERID").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
                ('ID': 'SHORT_EVT_NAME')
                ('OVER')
                    ('WORD': 'LENDERID')

>>> splparser.parse("chart perc97(duration) as Laufzeit by firma").print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('PERC97')
                ('WORD': 'duration')
                ('AS')
                    ('WORD': 'Laufzeit')
                ('BY')
                    ('WORD': 'firma')

>>> splparser.parse('chart count, eval(eval(action="deliver") + eval(action="render"))  as Render by action').print_tree()
('ROOT')
    ('STAGE')
        ('CHART')
            ('COUNT')
            ('EVAL')
                ('EVAL')
                    ('PLUS')
                        ('EQ')
                            ('WORD': 'action')
                            ('WORD': '"deliver"')
                        ('EVAL')
                            ('EQ')
                                ('WORD': 'action')
                                ('WORD': '"render"')
                ('AS')
                    ('WORD': 'Render')
                ('BY')
                    ('WORD': 'action')

Also in data set but probably not allowed: splparser.parse("chart (get_request)  as COUNT").print_tree()
