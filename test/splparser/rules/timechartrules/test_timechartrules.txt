
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser.parser

>>> splparser.parse("timechart count").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('FUNCTION': 'count')

>>> splparser.parse("timechart count by IPAddress").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'count')
                ('GROUPING_FIELD': 'IPAddress')

>>> splparser.parse("timechart count(connection_id) by connection_id").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'count')
                    ('FIELD': 'connection_id')
                ('GROUPING_FIELD': 'connection_id')

>>> splparser.parse("timechart span=1hr count by host").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1hr')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'count')
                ('GROUPING_DEFAULT_FIELD': 'host')

>>> splparser.parse("timechart span=1d count by cdi_businessunit limit=20").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1d')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'count')
                ('GROUPING_FIELD': 'cdi_businessunit')
            ('EQ': 'assign')
                ('OPTION': 'limit')
                ('VALUE': '20')

>>> splparser.parse("timechart limit=5 span=1w usenull=f useother=f dc(dest_host) by Vendor").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'limit')
                ('VALUE': '5')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1w')
            ('EQ': 'assign')
                ('OPTION': 'usenull')
                ('VALUE': 'f')
            ('EQ': 'assign')
                ('OPTION': 'useother')
                ('VALUE': 'f')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'distinct_count')
                    ('FIELD': 'dest_host')
                ('GROUPING_FIELD': 'Vendor')

>>> splparser.parse('timechart span=1w dc(dest_host) as PCs, count(eval(match(VulnTracked,"1"))) AS Vulns').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1w')
            ('FUNCTION': 'as')
                ('FUNCTION': 'distinct_count')
                    ('FIELD': 'dest_host')
                ('FIELD': 'PCs')
            ('FUNCTION': 'as')
                ('FUNCTION': 'count')
                    ('FUNCTION': 'eval')
                        ('FUNCTION': 'match')
                            ('FIELD': 'VulnTracked')
                            ('VALUE': '"1"')
                ('FIELD': 'Vulns')

>>> splparser.parse("timechart limit=5 span=1w dc(dest_host) as Global_Tracked_Vuln_Count usenull=f useother=f").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'limit')
                ('VALUE': '5')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1w')
            ('FUNCTION': 'as')
                ('FUNCTION': 'distinct_count')
                    ('FIELD': 'dest_host')
                ('FIELD': 'Global_Tracked_Vuln_Count')
            ('EQ': 'assign')
                ('OPTION': 'usenull')
                ('VALUE': 'f')
            ('EQ': 'assign')
                ('OPTION': 'useother')
                ('VALUE': 'f')

>>> splparser.parse('timechart span=24h eval(count(eval(cache="hit")) / (count(eval(cache="hit")) + count(eval(cache="miss")))) as percent, count as totalRequests, p50(responseTime) as p50, p95(responseTime) as p95, p99(responseTime) as p99').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '24h')
            ('FUNCTION': 'as')
                ('FUNCTION': 'eval')
                    ('FUNCTION': 'divides')
                        ('FUNCTION': 'count')
                            ('FUNCTION': 'eval')
                                ('FUNCTION': 'eq')
                                    ('FIELD': 'cache')
                                    ('VALUE': '"hit"')
                        ('FUNCTION': 'plus')
                            ('FUNCTION': 'count')
                                ('FUNCTION': 'eval')
                                    ('FUNCTION': 'eq')
                                        ('FIELD': 'cache')
                                        ('VALUE': '"hit"')
                            ('FUNCTION': 'count')
                                ('FUNCTION': 'eval')
                                    ('FUNCTION': 'eq')
                                        ('FIELD': 'cache')
                                        ('VALUE': '"miss"')
                ('FIELD': 'percent')
            ('FUNCTION': 'as')
                ('FUNCTION': 'count')
                ('FIELD': 'totalRequests')
            ('FUNCTION': 'as')
                ('FUNCTION': 'perc50')
                    ('FIELD': 'responseTime')
                ('FIELD': 'p50')
            ('FUNCTION': 'as')
                ('FUNCTION': 'perc95')
                    ('FIELD': 'responseTime')
                ('FIELD': 'p95')
            ('FUNCTION': 'as')
                ('FUNCTION': 'perc99')
                    ('FIELD': 'responseTime')
                ('FIELD': 'p99')

>>> splparser.parse("timechart span=1d first(eval(if(google_videos>=0,google_videos,null()))) as google_videos, first(eval(if(bing_videos>=0,bing_videos,null()))) as bing_videos, first(eval(if(yahoo_videos>=0,yahoo_videos,null()))) as yahoo_videos").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1d')
            ('FUNCTION': 'as')
                ('FUNCTION': 'first')
                    ('FUNCTION': 'eval')
                        ('FUNCTION': 'if')
                            ('FUNCTION': 'ge')
                                ('FIELD': 'google_videos')
                                ('VALUE': '0')
                            ('FIELD': 'google_videos')
                            ('FUNCTION': 'null')
                ('FIELD': 'google_videos')
            ('FUNCTION': 'as')
                ('FUNCTION': 'first')
                    ('FUNCTION': 'eval')
                        ('FUNCTION': 'if')
                            ('FUNCTION': 'ge')
                                ('FIELD': 'bing_videos')
                                ('VALUE': '0')
                            ('FIELD': 'bing_videos')
                            ('FUNCTION': 'null')
                ('FIELD': 'bing_videos')
            ('FUNCTION': 'as')
                ('FUNCTION': 'first')
                    ('FUNCTION': 'eval')
                        ('FUNCTION': 'if')
                            ('FUNCTION': 'ge')
                                ('FIELD': 'yahoo_videos')
                                ('VALUE': '0')
                            ('FIELD': 'yahoo_videos')
                            ('FUNCTION': 'null')
                ('FIELD': 'yahoo_videos')

>>> splparser.parse("timechart span=1w `summary_unattributed_counts`").print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'timechart')
            ('EQ': 'assign')
                ('OPTION': 'span')
                ('VALUE': '1w')
            ('MACRO': '`summary_unattributed_counts`')
