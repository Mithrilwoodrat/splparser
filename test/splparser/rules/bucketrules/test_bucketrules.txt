
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser.parser

>>> splparser.parse("bucket _time span=5m").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('ID': '_time')
            ('EQ')
                ('SPAN')
                ('ID': '5m')

>>> splparser.parse("bucket size bins=10").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('WORD': 'size')
            ('EQ')
                ('BINS')
                ('INT': '10')

>>> splparser.parse("bucket span=1d _time as date_only").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('EQ')
                ('SPAN')
                ('ID': '1d')
            ('ID': '_time')
                ('AS')
                    ('ID': 'date_only')

>>> splparser.parse('bucket _time span="1h"').print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('ID': '_time')
            ('EQ')
                ('SPAN')
                ('ID': '"1h"')

>>> splparser.parse("bucket span=0.5 SALE_PRICE").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('EQ')
                ('SPAN')
                ('FLOAT': '0.5')
            ('ID': 'SALE_PRICE')

>>> splparser.parse("bucket lag bins=4  span=15").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('WORD': 'lag')
            ('EQ')
                ('BINS')
                ('INT': '4')
            ('EQ')
                ('SPAN')
                ('INT': '15')

>>> splparser.parse("bucket span=10 cache_kbytes").print_tree()
('ROOT')
    ('STAGE')
        ('BUCKET')
            ('EQ')
                ('SPAN')
                ('INT': '10')
            ('ID': 'cache_kbytes')

NOTE(salspaugh): These are erroneous but appeared in the logs:
    splparser.parse("bucket -time=5m").print_tree()
    splparser.parse("bucket (userId count) span=100").print_tree()
