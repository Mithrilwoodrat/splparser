
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser

>>> splparser.parse('fillnull value=NULL foo bar').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': 'NULL')
            ('FIELD': 'foo')
            ('FIELD': 'bar')

>>> splparser.parse('fillnull value="-" `summary_unattributed_base_dimensions_list`,c_segments_d,c_segments_a1,c_segments_a2,c_segments_a3,c_segments_a4,c_segments_vv,c_segments_slv').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '"-"')
            ('MACRO': '`summary_unattributed_base_dimensions_list`')
            ('FIELD': 'c_segments_d')
            ('FIELD': 'c_segments_a1')
            ('FIELD': 'c_segments_a2')
            ('FIELD': 'c_segments_a3')
            ('FIELD': 'c_segments_a4')
            ('FIELD': 'c_segments_vv')
            ('FIELD': 'c_segments_slv')

>>> splparser.parse('fillnull value=none end_time, New_notinlist,New_SSO, New_business, group_added_to, OperatorAccount, Operator_SSO, Operator_business, dest_host, dest_businessunit').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': 'none')
            ('FIELD': 'end_time')
            ('FIELD': 'New_notinlist')
            ('FIELD': 'New_SSO')
            ('FIELD': 'New_business')
            ('FIELD': 'group_added_to')
            ('FIELD': 'OperatorAccount')
            ('FIELD': 'Operator_SSO')
            ('FIELD': 'Operator_business')
            ('FIELD': 'dest_host')
            ('FIELD': 'dest_businessunit')

>>> splparser.parse('fillnull bytes').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('FIELD': 'bytes')

>>> splparser.parse('fillnull app category src_ip dst_ip severity RISK threatid CATEGORY').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('FIELD': 'app')
            ('FIELD': 'category')
            ('FIELD': 'src_ip')
            ('FIELD': 'dst_ip')
            ('FIELD': 'severity')
            ('FIELD': 'RISK')
            ('FIELD': 'threatid')
            ('FIELD': 'CATEGORY')

>>> splparser.parse('fillnull value=0 purchase_RT, fail_RT, sum_RT').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '0')
            ('FIELD': 'purchase_RT')
            ('FIELD': 'fail_RT')
            ('FIELD': 'sum_RT')

>>> splparser.parse('fillnull value="Not in approved list" operator_SSO').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '"Not in approved list"')
            ('FIELD': 'operator_SSO')

>>> splparser.parse('fillnull value="----" SRC_NAME, SRC_CATEGORY').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '"----"')
            ('FIELD': 'SRC_NAME')
            ('FIELD': 'SRC_CATEGORY')

>>> splparser.parse('fillnull value="Unknown/Not booted" bootTime').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '"Unknown/Not booted"')
            ('FIELD': 'bootTime')

>>> splparser.parse('search index=pan_logs src_ip=10.247.83.*  NOT deny OR block | dedup dest |lookup dnsLookup src | fillnull value="NO DNS"| eventstats count AS total by src_ip | stats count first(total) AS total by src_ip src app elapsed_time bytes_received dst_ip dest CATEGORY | sort - count | stats list(src) AS src_address list(dest) AS url_ip list(CATEGORY) AS CATEGORY sum(elapsed_time) AS gt list(app) AS program first(total) AS total sum(bytes_received) AS Bandwidth sum(eval(bytes_received/1024/1024)) AS "Incoming Megabytes" sum(eval(bytes_received/1024/1024/1024)) AS "Incoming Gigabytes"  by src_ip | fields - total | fields - Bandwidth| eval gt = tostring(gt, "duration")|eval program=mvindex(program, 0)|eval CATEGORY=mvindex(CATEGORY, 0)|eval url=mvindex(url, 0)|eval url_ip=mvindex(url_ip, 0)|eval src_address=mvindex(src_address, 0)').print_tree()
('ROOT')
    ('STAGE')
        ('COMMAND': 'search')
            ('FUNCTION': 'AND')
                ('FUNCTION': 'eq')
                    ('DEFAULT_FIELD': 'index')
                    ('VALUE': 'pan_logs')
                ('FUNCTION': 'eq')
                    ('FIELD': 'src_ip')
                    ('VALUE': '10.247.83.*')
                ('FUNCTION': 'OR')
                    ('FUNCTION': 'NOT')
                        ('FUNCTION': 'contains')
                            ('VALUE': 'deny')
                    ('FUNCTION': 'contains')
                        ('VALUE': 'block')
    ('STAGE')
        ('COMMAND': 'dedup')
            ('FIELD': 'dest')
    ('STAGE')
        ('COMMAND': 'lookup')
            ('LOOKUP_TABLE': 'dnsLookup')
            ('FIELD': 'src')
    ('STAGE')
        ('COMMAND': 'fillnull')
            ('EQ': 'assign')
                ('OPTION': 'value')
                ('VALUE': '"NO DNS"')
    ('STAGE')
        ('COMMAND': 'eventstats')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'count')
                    ('FIELD': 'total')
                ('GROUPING_FIELD': 'src_ip')
    ('STAGE')
        ('COMMAND': 'stats')
            ('FUNCTION': 'count')
                ('FUNCTION': 'groupby')
                    ('FUNCTION': 'as')
                        ('FUNCTION': 'first')
                            ('FIELD': 'total')
                        ('FIELD': 'total')
                    ('GROUPING_FIELD': 'src_ip')
                    ('GROUPING_FIELD': 'src')
                    ('GROUPING_FIELD': 'app')
                    ('GROUPING_FIELD': 'elapsed_time')
                    ('GROUPING_FIELD': 'bytes_received')
                    ('GROUPING_FIELD': 'dst_ip')
                    ('GROUPING_FIELD': 'dest')
                    ('GROUPING_FIELD': 'CATEGORY')
    ('STAGE')
        ('COMMAND': 'sort')
            ('FUNCTION': 'descending')
                ('FIELD': 'count')
    ('STAGE')
        ('COMMAND': 'stats')
            ('FUNCTION': 'groupby')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'list')
                        ('FIELD': 'src')
                    ('FIELD': 'src_address')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'list')
                        ('FIELD': 'dest')
                    ('FIELD': 'url_ip')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'list')
                        ('FIELD': 'CATEGORY')
                    ('FIELD': 'CATEGORY')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'sum')
                        ('FIELD': 'elapsed_time')
                    ('FIELD': 'gt')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'list')
                        ('FIELD': 'app')
                    ('FIELD': 'program')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'first')
                        ('FIELD': 'total')
                    ('FIELD': 'total')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'sum')
                        ('FIELD': 'bytes_received')
                    ('FIELD': 'Bandwidth')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'sum')
                        ('FUNCTION': 'eval')
                            ('FUNCTION': 'divides')
                                ('FUNCTION': 'divides')
                                    ('FIELD': 'bytes_received')
                                    ('VALUE': '1024')
                                ('VALUE': '1024')
                    ('FIELD': '"Incoming Megabytes"')
                ('FUNCTION': 'as')
                    ('FUNCTION': 'sum')
                        ('FUNCTION': 'eval')
                            ('FUNCTION': 'divides')
                                ('FUNCTION': 'divides')
                                    ('FUNCTION': 'divides')
                                        ('FIELD': 'bytes_received')
                                        ('VALUE': '1024')
                                    ('VALUE': '1024')
                                ('VALUE': '1024')
                    ('FIELD': '"Incoming Gigabytes"')
                ('GROUPING_FIELD': 'src_ip')
    ('STAGE')
        ('COMMAND': 'fields')
            ('FUNCTION': 'minus')
                ('FIELD': 'total')
    ('STAGE')
        ('COMMAND': 'fields')
            ('FUNCTION': 'minus')
                ('FIELD': 'Bandwidth')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'gt')
                ('FUNCTION': 'tostring')
                    ('FIELD': 'gt')
                    ('VALUE': '"duration"')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'program')
                ('FUNCTION': 'mvindex')
                    ('FIELD': 'program')
                    ('VALUE': '0')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'CATEGORY')
                ('FUNCTION': 'mvindex')
                    ('FIELD': 'CATEGORY')
                    ('VALUE': '0')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'url')
                ('FUNCTION': 'mvindex')
                    ('FIELD': 'url')
                    ('VALUE': '0')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'url_ip')
                ('FUNCTION': 'mvindex')
                    ('FIELD': 'url_ip')
                    ('VALUE': '0')
    ('STAGE')
        ('COMMAND': 'eval')
            ('EQ': 'assign')
                ('FIELD': 'src_address')
                ('FUNCTION': 'mvindex')
                    ('FIELD': 'src_address')
                    ('VALUE': '0')
