
Below are clips from an interactive session in which I test various aspects of the parser.

>>> import splparser.parser

>>> splparser.parser.parse("rename ip_address as dest_host").print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('ID': 'ip_address')
                ('ID': 'dest_host')

>>> splparser.parser.parse("rename cdi_city as city, cdi_country as country, cdi_business as user_business, dest_ip as ip, dest_host as hostname, cdi_subbusiness as user_businessunit").print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('ID': 'cdi_city')
                ('WORD': 'city')
            ('AS')
                ('ID': 'cdi_country')
                ('WORD': 'country')
            ('AS')
                ('ID': 'cdi_business')
                ('ID': 'user_business')
            ('AS')
                ('ID': 'dest_ip')
                ('WORD': 'ip')
            ('AS')
                ('ID': 'dest_host')
                ('WORD': 'hostname')
            ('AS')
                ('ID': 'cdi_subbusiness')
                ('ID': 'user_businessunit')

>>> splparser.parser.parse("rename count(Type) as Failures").print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('COUNT')
                    ('WORD': 'Type')
                ('WORD': 'Failures')

>>> splparser.parser.parse('rename _time as "Time Logged In"').print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('ID': '_time')
                ('LITERAL': '"Time Logged In"')

>>> splparser.parser.parse('rename atLeast25 as "25%-50% of Video Viewed", atLeast50 as "50%-100% of Video Viewed", full as "Full Video Viewed", starts as "0%-25% of Video Viewed", all as "Total Video Views", completionRate as "Completion Rate", start_time as "Start Time", end_time as "End Time"').print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('ID': 'atLeast25')
                ('LITERAL': '"25%-50% of Video Viewed"')
            ('AS')
                ('ID': 'atLeast50')
                ('LITERAL': '"50%-100% of Video Viewed"')
            ('AS')
                ('WORD': 'full')
                ('LITERAL': '"Full Video Viewed"')
            ('AS')
                ('WORD': 'starts')
                ('LITERAL': '"0%-25% of Video Viewed"')
            ('AS')
                ('WORD': 'all')
                ('LITERAL': '"Total Video Views"')
            ('AS')
                ('WORD': 'completionRate')
                ('LITERAL': '"Completion Rate"')
            ('AS')
                ('ID': 'start_time')
                ('LITERAL': '"Start Time"')
            ('AS')
                ('ID': 'end_time')
                ('LITERAL': '"End Time"')

>>> splparser.parser.parse('rename avg(memUsedPct) as "Used Mem", avg(memFreePct) as Free_Mem').print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('AVG')
                    ('WORD': 'memUsedPct')
                ('LITERAL': '"Used Mem"')
            ('AS')
                ('AVG')
                    ('WORD': 'memFreePct')
                ('ID': 'Free_Mem')

>>> splparser.parser.parse('rename sum(CounterValue) as "PE Total"').print_tree()
('ROOT')
    ('STAGE')
        ('RENAME')
            ('AS')
                ('SUM')
                    ('WORD': 'CounterValue')
                ('LITERAL': '"PE Total"')
